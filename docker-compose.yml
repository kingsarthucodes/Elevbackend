version: '3.8'

services:
  mongodb:
    image: mongo:latest
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    networks:
      - flask-mongo-network
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: filia~2^
      MONGO_INITDB_DATABASE: filia_database

  flask-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: flask-app
    ports:
      - "5001:5000"
    networks:
      - flask-mongo-network
    depends_on:
      - mongodb
      - kafka
    entrypoint: ["/wait-for-it.sh", "kafka:9092", "--", "flask", "run", "--host=0.0.0.0", "--port=5000"]
    environment:
      - FLASK_DEBUG=1
      - FLASK_RUN_HOST=0.0.0.0
      - FLASK_RUN_PORT=5000
      - MONGO_URI=mongodb://root:filia~2^@mongodb:27017/
      - KAFKA_BROKER=kafka:9092  # Connect using the service name

  kafka:
    image: wurstmeister/kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
    networks:
      - flask-mongo-network
    environment:
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      KAFKA_LISTENER_SECURITY_PROTOCOL: PLAINTEXT
      KAFKA_LISTENERS: 'PLAINTEXT://0.0.0.0:9092'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka:9092'
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181

  zookeeper:
    image: wurstmeister/zookeeper:latest
    container_name: zookeeper
    ports:
      - "2182:2181"
    networks:
      - flask-mongo-network

networks:
  flask-mongo-network:
    driver: bridge

volumes:
  mongo_data:
